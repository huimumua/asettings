apply plugin: 'com.android.application'

def getTime() {
    return new Date().format("yyyyMMdd", TimeZone.getDefault())
}

android {
    signingConfigs {
        singnedconfig {
            keyAlias 'android'
            keyPassword 'android'
            storeFile file('../tools/CDR7010.keystore')
            storePassword 'android'
        }
    }
    compileSdkVersion 25
    defaultConfig {
        applicationId "com.askey.dvr.cdr7010.setting"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.1"
        project.archivesBaseName = "ASettings"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.singnedconfig
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.singnedconfig
            jniDebuggable true
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.singnedconfig
        }
    }
    //打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                fileName = "Settings.${defaultConfig.versionName}.${getTime()}.apk"
                fileName = "ASettings.apk"
                outputFileName = fileName
            }
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/values-zh-rTW'] } }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    //以下是为了找到android.os.SystemProperties这个隐藏的类
    String SDK_DIR = System.getenv("ANDROID_SDK_HOME")
    //("TAG", "SDK_DIR = " + SDK_DIR );
    if(SDK_DIR == null) {
        Properties props = new Properties()
        props.load(new FileInputStream(project.rootProject.file("local.properties")))
        SDK_DIR = props.get('sdk.dir');
    }
    dependencies {
        provided files("${SDK_DIR}/platforms/android-21/data/layoutlib.jar")
    }
    //以上是为了找到android.os.SystemProperties这个隐藏的
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly files('libs/com.askey.platform.jar')
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support:support-v4:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
